{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../livro.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction BookUpdateComponent_option_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 10);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const Livro_r1 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(Livro_r1.titulo);\n  }\n}\nexport class BookUpdateComponent {\n  constructor(livroService, activeRouter, router) {\n    this.livroService = livroService;\n    this.activeRouter = activeRouter;\n    this.router = router;\n  }\n  ngOnInit() {\n    const id = this.activeRouter.snapshot.paramMap.get('id');\n    this.livroService.readById(id).subscribe(livro => {\n      this.livro = livro;\n    });\n  }\n  update() {\n    this.livroService.update(this.livro).subscribe(() => {\n      this.livroService.showMensage('produto atualizado');\n      this.router.navigate(['']);\n    });\n  }\n  cancel() {\n    this.router.navigate(['']);\n  }\n  static #_ = this.ɵfac = function BookUpdateComponent_Factory(t) {\n    return new (t || BookUpdateComponent)(i0.ɵɵdirectiveInject(i1.LivroService), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: BookUpdateComponent,\n    selectors: [[\"app-book-update\"]],\n    decls: 17,\n    vars: 3,\n    consts: [[1, \"container\"], [1, \"pb-2\", \"mt-4\", \"mb-4\", \"border-bottom\"], [1, \"col-sm-6\"], [1, \"form-group\"], [\"for\", \"titulo\"], [\"type\", \"text\", \"name\", \"titulo\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"name\", \"status\", 3, \"ngModel\", \"ngModelChange\"], [\"value\", \"Livro.name\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"click\"], [\"type\", \"button\", 1, \"btn\", \"btn-danger\", 3, \"click\"], [\"value\", \"Livro.name\"]],\n    template: function BookUpdateComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h2\");\n        i0.ɵɵtext(3, \"atualizar livro\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(4, \"div\", 2)(5, \"form\")(6, \"div\", 3)(7, \"label\", 4);\n        i0.ɵɵtext(8, \"titulo\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"input\", 5);\n        i0.ɵɵlistener(\"ngModelChange\", function BookUpdateComponent_Template_input_ngModelChange_9_listener($event) {\n          return ctx.livro.titulo = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(10, \"div\", 3)(11, \"select\", 6);\n        i0.ɵɵlistener(\"ngModelChange\", function BookUpdateComponent_Template_select_ngModelChange_11_listener($event) {\n          return ctx.livro.status = $event;\n        });\n        i0.ɵɵtemplate(12, BookUpdateComponent_option_12_Template, 2, 1, \"option\", 7);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(13, \"button\", 8);\n        i0.ɵɵlistener(\"click\", function BookUpdateComponent_Template_button_click_13_listener() {\n          return ctx.update();\n        });\n        i0.ɵɵtext(14, \"atualizar\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"button\", 9);\n        i0.ɵɵlistener(\"click\", function BookUpdateComponent_Template_button_click_15_listener() {\n          return ctx.cancel();\n        });\n        i0.ɵɵtext(16, \"cancelar\");\n        i0.ɵɵelementEnd()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"ngModel\", ctx.livro.titulo);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngModel\", ctx.livro.status);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.livro);\n      }\n    },\n    dependencies: [i3.NgForOf, i4.ɵNgNoValidate, i4.NgSelectOption, i4.ɵNgSelectMultipleOption, i4.DefaultValueAccessor, i4.SelectControlValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.NgModel, i4.NgForm],\n    styles: [\"button[_ngcontent-%COMP%]{\\n    margin:10px 10px 10px 0px;\\n}\\n/*# sourceURL=webpack://./src/app/component/livro/book-update/book-update.component.css */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50L2xpdnJvL2Jvb2stdXBkYXRlL2Jvb2stdXBkYXRlLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSx5QkFBeUI7QUFDN0IiLCJzb3VyY2VzQ29udGVudCI6WyJidXR0b257XG4gICAgbWFyZ2luOjEwcHggMTBweCAxMHB4IDBweDtcbn0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n  });\n}","map":{"version":3,"mappings":";;;;;;;IAsBoBA,kCAAuD;IAAAA,YAAgB;IAAAA,iBAAS;;;;IAAzBA,eAAgB;IAAhBA,qCAAgB;;;ACX3F,OAAM,MAAOC,mBAAmB;EAE9BC,YAAoBC,YAAyB,EAASC,YAA2B,EAASC,MAAa;IAAnF,iBAAY,GAAZF,YAAY;IAAsB,iBAAY,GAAZC,YAAY;IAAwB,WAAM,GAANC,MAAM;EAAS;EAGzGC,QAAQ;IACN,MAAMC,EAAE,GAAG,IAAI,CAACH,YAAY,CAACI,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,IAAI,CAAC;IACxD,IAAI,CAACP,YAAY,CAACQ,QAAQ,CAACJ,EAAG,CAAC,CAACK,SAAS,CAACC,KAAK,IAAG;MAChD,IAAI,CAACA,KAAK,GAAGA,KAAK;IACpB,CAAC,CAAC;EACJ;EAEAC,MAAM;IACJ,IAAI,CAACX,YAAY,CAACW,MAAM,CAAC,IAAI,CAACD,KAAK,CAAC,CAACD,SAAS,CAAC,MAAK;MAClD,IAAI,CAACT,YAAY,CAACY,WAAW,CAAC,oBAAoB,CAAC;MACnD,IAAI,CAACV,MAAM,CAACW,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC;IAC5B,CAAC,CAAC;EACJ;EAEAC,MAAM;IACJ,IAAI,CAACZ,MAAM,CAACW,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC;EAC5B;EAAC;qBArBUf,mBAAmB;EAAA;EAAA;UAAnBA,mBAAmB;IAAAiB;IAAAC;IAAAC;IAAAC;IAAAC;MAAA;QDXhCtB,8BAAuB;QAEXA,+BAAe;QAAAA,iBAAK;QAG5BA,8BAAsB;QAIUA,sBAAM;QAAAA,iBAAQ;QAClCA,gCAAiF;QAAzCA;UAAA;QAAA,EAA0B;QAAlEA,iBAAiF;QAUrFA,+BAAwB;QACZA;UAAA;QAAA,EAA0B;QAC9BA,4EAAgF;QACpFA,iBAAS;QAGbA,kCAAiE;QAAnBA;UAAA,OAASuB,YAAQ;QAAA,EAAC;QAACvB,0BAAS;QAAAA,iBAAS;QACnFA,kCAAgE;QAAnBA;UAAA,OAASuB,YAAQ;QAAA,EAAC;QAACvB,yBAAQ;QAAAA,iBAAS;;;QAjBrCA,eAA0B;QAA1BA,0CAA0B;QAW1DA,eAA0B;QAA1BA,0CAA0B;QACeA,eAAQ;QAARA,mCAAQ","names":["i0","BookUpdateComponent","constructor","livroService","activeRouter","router","ngOnInit","id","snapshot","paramMap","get","readById","subscribe","livro","update","showMensage","navigate","cancel","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/home/guilherme/projetos front-end/gerenciador-de-livros-pessoais/frontend/src/app/component/livro/book-update/book-update.component.html","/home/guilherme/projetos front-end/gerenciador-de-livros-pessoais/frontend/src/app/component/livro/book-update/book-update.component.ts"],"sourcesContent":["<div class=\"container\">\n    <div class=\"pb-2 mt-4 mb-4 border-bottom\">\n        <h2>atualizar livro</h2>\n    </div>\n    \n    <div class=\"col-sm-6\">\n        <form>\n            \n            <div class=\"form-group\">\n                <label for=\"titulo\">titulo</label>\n                <input type=\"text\" class=\"form-control\" [(ngModel)]=\"livro.titulo\" name=\"titulo\">\n            </div>\n           \n            <!-- <div class=\"form-group\">\n                <select [(ngModel)]=\"livro.status\" name=\"status\">\n                    <option value=\"ler\">ler</option>\n                    <option value=\"lido\">lido</option>\n                </select>\n            </div> -->\n\n            <div class=\"form-group\">\n                <select [(ngModel)]=\"livro.status\" name=\"status\">\n                    <option value=\"Livro.name\" *ngFor=\"let Livro of livro\">{{Livro.titulo}}</option>\n                </select>\n            </div>\n            \n            <button type=\"submit\" class=\"btn btn-primary\" (click)=\"update()\">atualizar</button>\n            <button type=\"button\" class=\"btn btn-danger\" (click)=\"cancel()\">cancelar</button>\n        </form>\n    </div>\n</div>\n\n<!--criei um component create,service,routing,estilizacao,\n                criar os botoes\n            criamos a funcionalidade salvar\n            e criamos no readbyid no service\n            implementacao do editar\n            (falta implementa o remove)\n            <option value=\"Livro.name\" *ngFor=\"let Livro of livro\">{{Livro.name}}</option>\n            -->\n","import { ThisReceiver } from '@angular/compiler';\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Livro } from '../livro.model';\nimport { LivroService } from '../livro.service';\n\n@Component({\n  selector: 'app-book-update',\n  templateUrl: './book-update.component.html',\n  styleUrls: ['./book-update.component.css']\n})\nexport class BookUpdateComponent implements OnInit{\n\n  constructor(private livroService:LivroService,private activeRouter:ActivatedRoute,private router:Router){}\n\n  livro!:Livro\n  ngOnInit(): void {\n    const id = this.activeRouter.snapshot.paramMap.get('id');\n    this.livroService.readById(id!).subscribe(livro => {\n      this.livro = livro;\n    })\n  }\n\n  update():void{\n    this.livroService.update(this.livro).subscribe(() => {\n      this.livroService.showMensage('produto atualizado')\n      this.router.navigate([''])\n    })\n  }\n\n  cancel():void{\n    this.router.navigate([''])\n  }\n  \n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}